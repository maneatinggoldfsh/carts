pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
function _init()
 poke(0x5f2d,1)
end

tether={x=64,x=28}

obj={
 x=10,y=28,
 sx=.2,sy=2,
 tethered=false,
 jumping=true,
 l=53
}

maxl=10
maxfall=3
gravity=0.12

px=64
py=28
x=0
y=0

function _update()
-- x=stat(32)
-- y=stat(33)
 obj.sy=appr(obj.sy,maxfall,gravity)
 local prevx=obj.x
 local prevy=obj.y

 if (btn(0)) obj.sx,obj.sy=-1,obj.sy
 if (btn(1)) obj.sx,obj.sy=1,obj.sy

 obj.y+=obj.sy
 obj.x+=obj.sx

 printh("obj sx "..tostr(obj.sx))

 local v={x=obj.x-px,y=obj.y-py}
 local l=sqrt(v.x^2+v.y^2)
 local _maxl=maxl
 if obj.jumping then
  _maxl=max(obj.l,maxl)
 end

 printh("l "..tostr(l).." maxl "..tostr(_maxl))

 if l>_maxl then
  v.x=v.x*_maxl/l
  v.y=v.y*_maxl/l
  obj.x=px+v.x
  obj.y=py+v.y
  obj.sx=obj.x-prevx
  obj.sy=obj.y-prevy

  obj.sx*=1
  obj.sy*=1
 end

 if obj.jumping then
  obj.l=l
  obj.l-=2
 end
end

function _draw()
 cls()
-- line(px,py,x,y,7)
-- local a=atan2(x-px,y-py)
-- print(tostr(x)..","..tostr(y),64,80,7)
-- print(tostr(a),64,64,7)
 line(obj.x,obj.y,px,py,7)
 rect(obj.x,obj.y,obj.x+4,obj.y+4,8)
end
-->8
function appr(val,target,amount)
 return (val>target and max(val-amount,target)) or min(val+amount,target)
end

__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0001000000000000000f0500f050000000f0500f0500000010050100500000010050110501205014050160501a0501f05023050280502e0503305000000000000000000000000000000000000000000000000000
