pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- functions
function appr(val,target,amount)
 return (val>target and max(val-amount,target)) or min(val+amount,target)
end

function sign(v)
 return v>0 and 1 or v<0 and -1 or 0
end

function rndsign()
 return rnd(1)>0.5 and 1 or -1
end

function round(x)
 return flr(x+0.5)
end

function maybe(p)
 if (p==nil) p=0.5
 return rnd(1)<p
end

function mrnd(x)
 return rnd(x*2)-x
end

function rnd_elt(v)
 return v[min(#v,1+flr(rnd(#v)+0.5))]
end

--- function for calculating
-- exponents to a higher degree
-- of accuracy than using the
-- ^ operator.
-- function created by samhocevar.
-- source: https://www.lexaloffle.com/bbs/?tid=27864
-- @param x number to apply exponent to.
-- @param a exponent to apply.
-- @return the result of the
-- calculation.
function pow(x,a)
  if (a==0) return 1
  if (a<0) x,a=1/x,-a
  local ret,a0,xn=1,flr(a),x
  a-=a0
  while a0>=1 do
      if (a0%2>=1) ret*=xn
      xn,a0=xn*xn,shr(a0,1)
  end
  while a>0 do
      while a<1 do x,a=sqrt(x),a+a end
      ret,a=ret*x,a-1
  end
  return ret
end

function v_idx(pos)
 return pos.x+pos.y*128
end

function class (init)
  local c = {}
  c.__index = c
  c._ctr=init
  function c.init (...)
    local self = setmetatable({},c)
    c._ctr(self,...)
    return self
  end
  return c
end

function subclass(parent,init)
 local c=class(init)
 return setmetatable(c,{__index=parent})
end

-- vectors
local v2mt={}
v2mt.__index=v2mt

function v2(x,y)
 local t={x=x,y=y}
 return setmetatable(t,v2mt)
end

function v2mt.__add(a,b)
 return v2(a.x+b.x,a.y+b.y)
end

function v2mt.__sub(a,b)
 return v2(a.x-b.x,a.y-b.y)
end

function v2mt.__mul(a,b)
 if (type(a)=="number") return v2(b.x*a,b.y*a)
 if (type(b)=="number") return v2(a.x*b,a.y*b)
 return v2(a.x*b.x,a.y*b.y)
end

function v2mt.__div(a,b)
 if (type(a)=="number") return v2(b.x/a,b.y/a)
 if (type(b)=="number") return v2(a.x/b,a.y/b)
 return v2(a.x/b.x,a.y/b.y)
end

function v2mt.__eq(a,b)
 return a.x==b.x and a.y==b.y
end

function v2mt:min(v)
 return v2(min(self.x,v.x),min(self.y,v.y))
end

function v2mt:max(v)
 return v2(max(self.x,v.x),max(self.y,v.y))
end

function v2mt:magnitude()
 return sqrt(self.x^2+self.y^2)
end

function v2mt:sqrmagnitude()
 return self.x^2+self.y^2
end

function v2mt:normalize()
 return self/self:magnitude()
end

function v2mt:str()
 return "["..tostr(self.x)..","..tostr(self.y).."]"
end

function v2mt:flr()
 return v2(flr(self.x),flr(self.y))
end

function v2mt:clone()
 return v2(self.x,self.y)
end

dir_down=0
dir_right=1
dir_up=2
dir_left=3

vec_down=v2(0,1)
vec_up=v2(0,-1)
vec_right=v2(1,0)
vec_left=v2(-1,0)

function dir2vec(dir)
 local dirs={v2(0,1),v2(1,0),v2(0,-1),v2(-1,0)}
 return dirs[(dir+4)%4]
end

function angle2vec(angle)
 return v2(cos(angle),sin(angle))
end

local bboxvt={}
bboxvt.__index=bboxvt

function bbox(aa,bb)
 return setmetatable({aa=aa,bb=bb},bboxvt)
end

function bboxvt:w()
 return self.bb.x-self.aa.x
end

function bboxvt:h()
 return self.bb.y-self.aa.y
end

function bboxvt:is_inside(v)
 return v.x>=self.aa.x
 and v.x<=self.bb.x
 and v.y>=self.aa.y
 and v.y<=self.bb.y
end

function bboxvt:str()
 return self.aa:str().."-"..self.bb:str()
end

function bboxvt:draw(col)
 rect(self.aa.x,self.aa.y,self.bb.x-1,self.bb.y-1,col)
end

function bboxvt:to_tile_bbox()
 local x0=max(0,flr(self.aa.x/8))
 local x1=min(room.dim.x,(self.bb.x-1)/8)
 local y0=max(0,flr(self.aa.y/8))
 local y1=min(room.dim.y,(self.bb.y-1)/8)
 return bbox(v2(x0,y0),v2(x1,y1))
end

function bboxvt:collide(other)
 return other.bb.x > self.aa.x and
   other.bb.y > self.aa.y and
   other.aa.x < self.bb.x and
   other.aa.y < self.bb.y
end

function bboxvt:clip(p)
 return v2(mid(self.aa.x,p.x,self.bb.x),
           mid(self.aa.y,p.y,self.bb.y))
end

function bboxvt:shrink(amt)
 local v=v2(amt,amt)
 return bbox(v+self.aa,self.bb-v)
end

local hitboxvt={}
hitboxvt.__index=hitboxvt

function hitbox(offset,dim)
 return setmetatable({offset=offset,dim=dim},hitboxvt)
end

function hitboxvt:to_bbox_at(v)
 return bbox(self.offset+v,self.offset+v+self.dim)
end

function hitboxvt:str()
 return self.offset:str().."-("..self.dim:str()..")"
end

local frame=0
local dt=0
local time_factor=1
local lasttime=time()
local room=nil

local actors={}
local tiles={}
local crs={}
local draw_crs={}

local player=nil
local enemy_manager=nil

local is_fading=false
local is_screen_dark=false

local dpal={0,1,1,2,1,13,6,4,4,9,3,13,1,13,13}


function darken(p,_pal)
 for j=1,15 do
  local kmax=(p+(j*1.46))/22
  local col=j
  for k=1,kmax do
   if (col==0) break
   col=dpal[col]
  end
  if (col==14) col=13
  if (col==2) col=5
  if (col==8) col=5
  pal(j,col,_pal)
 end
end

-- fade
function fade(fade_in)
 is_fading=true
 is_screen_dark=false
 local p=0
 for i=1,10 do
  local i_=i
  local time_elapsed=0

  if (fade_in==true) i_=10-i
  p=flr(mid(0,i_/10,1)*100)

  while time_elapsed<0.1 do
   darken(p,1)

   if not fade_in and p==100 then
    -- this needs to be set before the final yield
    -- draw will continue to be called even if we are
    -- in a coresumed cr, if i understand this correctly
    is_screen_dark=true
   end

   time_elapsed+=dt
   yield()
  end
 end

 is_fading=false
end

function tick_crs(crs_)
 for cr in all(crs_) do
  if costatus(cr)!='dead' then
   local status,err=coresume(cr)
   if (not status) printh("cr error "..err)
  else
   del(crs_,cr)
  end
 end
end

function add_cr(f)
 local cr=cocreate(f)
 add(crs,cr)
 return cr
end

function add_draw_cr(f)
 local cr=cocreate(f)
 add(draw_crs,cr)
 return cr
end

function wait_for(t)
 while t>0 do
  t-=dt
  yield()
 end
end

cls_clock=class(function(self,pos)
 self.t=0
 self.pos=pos
end)

function cls_clock:update()
 self.t+=dt
end

function cls_clock:draw()
 for i=0,10 do
  local x=cos(self.t-i*0.1)
  local y=sin(self.t-i*0.1)
  darken(i*10)
  circfill(self.pos.x+x*10,self.pos.y+y*10,(10-i)/3,7)
 end
 pal()
end

local clock=cls_clock.init(v2(100,100))

local slow_time_factor=0.2
local slow_time_countdown=3

local state_normal_time=0
local state_slow_time=1

cls_clock_control=class(function(self)
 self.time_factor=1
 self.lasttime=time()
 self.countdown=0
 self.state=state_normal_time
end)

function cls_clock_control:get_dt()
 local dt=time()-lasttime
 self.countdown-=dt
 lasttime=time()
 if (self.state==state_slow_time) return dt*slow_time_factor
 return dt
end

function cls_clock_control:update()
 if self.state==state_slow_time and self.countdown<0 then
  self.state=state_normal_time
 end
end

function cls_clock_control:on_enemy_winds_up()
 self.state=state_slow_time
 self.countdown=slow_time_countdown
end

function cls_clock_control:on_enemy_attacks()
 self.state=state_normal_time
end

function cls_clock_control:on_player_attacks()
 self.state=state_slow_time
 self.countdown=slow_time_countdown
end

local clock_control=cls_clock_control.init()

cls_particle=class(function(self,pos,lifetime,sprs)
 self.pos=pos+v2(mrnd(1),0)
 self.flip=v2(false,false)
 self.t=0
 self.lifetime=lifetime
 self.sprs=sprs
 self.is_solid=false
 self.weight=0
 self.spd=v2(0,0)
 add(actors,self)
end)

function cls_particle:random_flip()
 self.flip=v2(maybe(),maybe())
end

function cls_particle:random_angle(spd)
 self.spd=angle2vec(rnd(1))*spd
end

function cls_particle:update()
 self.t+=dt
 if self.t>self.lifetime then
   del(actors,self)
   return
 end

 self.pos+=self.spd
 local maxfall=2
end

function cls_particle:draw()
 local idx=flr(#self.sprs*(self.t/self.lifetime))
 local spr_=self.sprs[1+idx]
 spr(spr_,self.pos.x,self.pos.y,1,1,self.flip.x,self.flip.y)
end

cls_gore=subclass(cls_particle,function(self,pos)
 cls_particle._ctr(self,pos,0.5+rnd(2),{35,36,37,38,38})
 self.hitbox=hitbox(v2(2,2),v2(3,3))
 self.spd=angle2vec(rnd(1))
 self.weight=0.5+rnd(1)
 self:random_flip()
end)

function make_gore_explosion(pos)
 for i=0,30 do
  cls_gore.init(pos)
 end
end


cls_player=class(function(self,pos)
 self.pos=pos
end)

function cls_player:draw()
 rectfill(self.pos.x,self.pos.y,self.pos.x+8,self.pos.y+8,7)
end

function cls_player:update()
end

local countdown_idle=2
local countdown_winding_up=1
local countdown_attacking=1

local hit_interval=6

local state_idle=0
local state_winding_up=1
local state_attacking=2
local state_stunned=3
local enemy_colors={}
enemy_colors[state_idle]=7
enemy_colors[state_winding_up]=9
enemy_colors[state_attacking]=8
enemy_colors[state_stunned]=7

cls_enemy_manager=class(function(self)
 self.enemies={}
 self.hit_countdown=0
end)

function cls_enemy_manager:draw()
 foreach(self.enemies,function(e)
  rectfill(e.pos.x,e.pos.y,e.pos.x+8,e.pos.y+8,enemy_colors[e.state])
 end)
end

function cls_enemy_manager:update()
 self.hit_countdown-=dt

 local lowest_countdown=countdown_idle
 local next_enemy=nil

 foreach(self.enemies,function(e)
  e.countdown-=dt

  if e.state==state_idle and e.countdown<lowest_countdown then
   next_enemy=e
   lowest_countdown=e.countdown
  elseif e.state==state_winding_up and e.countdown<0 then
   for i=1,30 do
    cls_gore.init(e.pos)
   end
   clock_control:on_enemy_attacks()
   e.state=state_attacking
   e.countdown=countdown_attacking
  elseif e.state==state_attacking and e.countdown<0 then
   e.state=state_idle
   e.countdown=countdown_idle
  end
 end)

 if self.hit_countdown<0 and next_enemy!=nil then
  self.hit_countdown=hit_interval
  next_enemy.state=state_winding_up
  next_enemy.countdown=countdown_winding_up
  clock_control:on_enemy_winds_up()
 end
end

function cls_enemy_manager:add_enemy(pos)
 add(self.enemies,{
  state=state_idle,
  pos=pos,
  countdown=0
})
end


function _init()
 player=cls_player.init(v2(64,64))
 enemy_manager=cls_enemy_manager.init()
 enemy_manager:add_enemy(v2(32,64))
 enemy_manager:add_enemy(v2(64,32))
 enemy_manager:add_enemy(v2(64,96))
 enemy_manager:add_enemy(v2(96,64))
end

function _draw()
 frame+=1

 cls()
 if not is_screen_dark then
 end

 tick_crs(draw_crs)
 foreach(actors, function(a) a:draw() end)
 enemy_manager:draw()
 player:draw()
 clock:draw()
end

function _update60()
 clock_control:update()
 dt=clock_control:get_dt()
 lasttime=time()
 tick_crs(crs)

 player:update()
 enemy_manager:update()
 foreach(actors, function(a) a:update() end)
 clock:update()
end

__gfx__
0000000000ddd0000000000000ddd00000ddd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ddfdf0000ddd0000ddfdf000ddfdf000d0000d000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700ddf1f1f00ddfdf00ddf1f1f0ddf1f1f000d00d000d0000d0000000000088008808800080008880808088008080080088808080000000000000000000
000770000ff1f1f0ddf1f1f00ff1f1f00ff1f1f00005500000d00d000dd00dd00090909009090909000900909090009990909009009090000000000000000000
0007700000ffff000ff1f1f000ffff0000ffff000058d8000558d8000555500000f0f0f00f0f0f0f000f00f0f0f000fff0f0f00f00f0f0000000000000000000
007007000009900000ffff0000044000000999600500d0000000d0000008d8000070707007070707000700707070007070707007007070000000000000000000
000000000004400000044000006006000004460000000000000000000000d0000077007707700707000700777077007070707007007770000000000000000000
00000000000660000006060000000000000000000000000000000000000000000070707007000707000700707070007070707007007070000000000000000000
000000000ff0ff0000000000f000f000000000000000000000000000000000000070707007000707000700707070007070707007007070000000000000000000
0990009900f00f0000f00f000fff0000008080000000000000000000000000000070707007000707000700707070007070707007007070000000000000000000
0095959000ffff0000ffff000cfc00000888780000000000000000000000000000f0f0f00f000f0f000f00f0f0f000f0f0f0f00f00f0f0000000000000000000
0009990000fcfc00f0fcfc0066e6600008e888000000000000000000000000000090909009000909000900909090009090909009009090000000000000000000
0009e900f0ffffe0f0fffef00f6f00f0008e80000000000000000000000000000088008808000080000800808088008080080008008080000000000000000000
00000009f0099000f0044f000fff00f0000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00099909f0ffff00f0fff0000fff00f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
009444900fffff400ff6f60005f5ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000800088008408000008800000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0008480008400080000000000008e8000008e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
008888800d0000d00000000000888880008e8800000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00488480000000000000000000288280000882000088800000000000000000000000000000000000000000000000000000000000000000000000000000000000
000444000880000800000000000222000000200000020000000e0000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d800d808000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000d00d008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000770700000770000000000000000000000000000000000077000000000000000000000000000000000000000000000000000000000000000000000000000
70000600007700667000007000000000000000000000000000060000007700007000000000000000000000000000000000000000000000000000000000000000
00770000006600000000006700000000000000000000000000000700006000006600000000000000000000000000000000000000000000000000000000000000
07766000000000000000000000000000000000000000000000707700000000000000700000000000000000000000000000000000000000000000000000000000
0677770000000000000000000000000000000000000000000777770007007000000060000000000007000000c00000000000000007000000c000000000000000
077776000000000700000000007770000000770000000070006676007700600000000000000c0000c60000000000007007000000c60000000000007000000000
0076600700700000000000700777600077006770070000600000660006700000070000000077c0000c00770000000000c6000c000c0077000000000000000000
0000000676607000070007607667770076000660000000000000060000000000060000000c766cc0000006c0000000000c00c7c0000006c00000000000000000
65d6d656c776cc7c000000000000000000000000000000000000000085d88585cc6dc55dd55cd6ccc776cc7cc7cc677c00000000000000000000000000000000
006dd5007c5c566c00000000000000000000000000000000000000008dd0dd8076060d5dd5d060677c5c566cc665c5c700000000000000000000000000000000
d55655600c0c0c06000000000000000000000000006665000066650008000600c6cc00055000cc6c0c0c0c0660c0c0c000000000000000000000000000000000
5005566d500c5c6d6d0000000000000000000000006b65000068650008000800c50506d00d60505c500c5c6dd6c5c00500000000000000000000000000000000
005d000d005d000c0d6666500000000008000800006b650000686500000000006cccd50dd05dccc6005d000cc000d50000000000000000000000000000000000
000560d5555560d5d5d00d0000000000080006000065650000656500000000007500556dd6550057d65500577500556d00000000000000000000000000000000
5600d0555660d055550dd000056666508dd0dd80006d6500006d6500000000007cc0056556500cc756500cc77cc0056500000000000000000000000000000000
050005dd05dd05ddddd00d0000aaaa0085d88585006665000066650000000000c70505500550507c0550507cc705055000000000000000000000000000000000
cc6cc6cccc0000cc888ee88888eee88800eeee000000e00000eeee000eeeeee00000e00000eeeee0000eee000000000000000000000000000000000000000000
c6cc6ccccc0000cc00822000008888220e0000e0000ee00000e000e000000e00000e0e0000e0000000ee00000000000000000000000000000000000000000000
000000006c00006c0000000000028200e000000e00e0e00000e000e00000e00000e00e0000e000000e0000000000000000000000000000000000000000000000
00000000c60000c60000000000000000e000000e0000e000000000e00eeeee000e000e0000eeee00e00000000000000000000000000000000000000000000000
00000000cc0000cc0000000000000000e000000e0000e00000eeeee0000000e0e0000e0000000ee0eeeeeee00000000000000000000000000000000000000000
000000006c00006c0000000000000000e000000e0000e00000e00000000000e00eeeeeee000000e0e000000e0000000000000000000000000000000000000000
cc6cc6ccc60000c600000000000000000e0000e00000e00000e00000000000e000000e0000000ee00e00000e0000000000000000000000000000000000000000
c6cc6ccccc0000cc000000000000000000eeee0000eeeee000eeeee00eeeee0000000e0000eeee0000eeeee00000000000000000000000000000000000000000
00000000000000000000000000000000000000888800000000000088880000000000050000000000000005000000000000000000000000000000000000000000
000000000000000000000000000000000000008888000000000000888800000000000d000000000000000d000000000000000000000000000000000000000000
00000005d000000000000006d0000000000000000000000000000000000000000000060000000000000006000000000000000000000000000000000000000000
0000005005000000000000600600000000000d6666d0000000000d6666d0000000006d500000000000006d500000000000000000000000000000000000000000
000005d50d000000000006d50d000000000000555500000000000055550000000000999000000000000099900000000000000000000000000000000000000000
0000099905000000000009990d000000000000799700000000000000000000000000797000000000000009000000000000000000000000000000000000000000
000007970d000000000000900d000000000007777770000000000000000000000007777700000000000000000000000000000000000000000000000000000000
0000777776000000000000000d000000000007944970000000000076670000000057777750000000000000000000000000000000000000000000000000000000
00007777760000000000000005000000000079151597000000000755557000000577777775000000000000000000000000000000000000000000000000000000
0007777776000000000000000d000000000074515147000000000650056000005677777776500000000000000000000000000000000000000000000000000000
0007777776000000000000000d000000000774151547700000000650056000007777777777600000000000000000000000000000000000000000000000000000
0077777776700000000000000d000000000774515147700000000650056000007777777777700000000000000000000000000000000000000000000000000000
00777777767000000000000005000000007774151547770000000650056000007777777777700000000000000000000000000000000000000000000000000000
0777777776770000000000000d000000007774515147770000000650056000007777777777700000000000000000000000000000000000000000000000000000
077777776d570000000000006d500000077779151597777000000d5005d000005777777777500000000000000000000000000000000000000000000000000000
77777776d555700000000006d5550000077774515147777000000650056000000556666655000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000700000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007777700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007700700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007707700
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c3
